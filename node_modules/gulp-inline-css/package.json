{
  "name": "gulp-inline-css",
  "version": "3.0.1",
  "description": "Inline linked css in an html file. Useful for emails.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "gulp-util": "^3.0.0",
    "inline-css": "^2.1.1",
    "through2": "^0.6.1"
  },
  "devDependencies": {
    "coveralls": "^2.11.6",
    "event-stream": "^3.3.2",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.1.1",
    "gulp-mocha": "^2.0.0",
    "mocha": "*",
    "nyc": "^5.0.0",
    "should": "^4.6.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha",
    "lint": "gulp lint",
    "coverage": "nyc npm test && nyc report",
    "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls"
  },
  "files": [
    "index.js"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jonkemp/gulp-inline-css"
  },
  "keywords": [
    "gulpplugin",
    "inline",
    "css",
    "html",
    "email"
  ],
  "author": {
    "name": "Jonathan Kemp",
    "email": "kempdogg@gmail.com",
    "url": "http://jonkemp.com/"
  },
  "license": "MIT",
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-inline-css [![Build Status](https://travis-ci.org/jonkemp/gulp-inline-css.svg?branch=master)](https://travis-ci.org/jonkemp/gulp-inline-css) [![Coverage Status](https://coveralls.io/repos/jonkemp/gulp-inline-css/badge.svg?branch=master&service=github)](https://coveralls.io/github/jonkemp/gulp-inline-css?branch=master)\n\n[![NPM](https://nodei.co/npm/gulp-inline-css.png?downloads=true)](https://nodei.co/npm/gulp-inline-css/)\n\n> Inline your CSS properties into the `style` attribute in an html file. Useful for emails.\n\nInspired by the grunt plugin [grunt-inline-css](https://github.com/jgallen23/grunt-inline-css). Uses the [inline-css](https://github.com/jonkemp/inline-css) module.\n\n## What's new in 3.0?\n\n- Uses Promises with [inline-css](https://github.com/jonkemp/inline-css) version 2.0\n\n## How It Works\n\nThis gulp plugin takes an html file and inlines the CSS properties into the style attribute.\n\n`/path/to/file.html`:\n```html\n<html>\n<head>\n  <style>\n    p { color: red; }\n  </style>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <p>Test</p>\n</body>\n</html>\n```\n\n`style.css`\n```css\np {\n  text-decoration: underline;\n}\n```\n\nOutput:\n```html\n<html>\n<head>\n</head>\n<body>\n  <p style=\"color: red; text-decoration: underline;\">Test</p>\n</body>\n</html>\n```\n\n## What is this useful for ?\n\n- HTML emails. For a comprehensive list of supported selectors see\n[here](http://www.campaignmonitor.com/css/)\n- Embedding HTML in 3rd-party websites.\n- Performance. Downloading external stylesheets delays the rendering of the page in the browser. Inlining CSS speeds up this process because the browser doesn't have to wait to download an external stylesheet to start rendering the page.\n\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-inline-css)\n\n```\nnpm install --save-dev gulp-inline-css\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n    inlineCss = require('gulp-inline-css');\n\ngulp.task('default', function() {\n    return gulp.src('./*.html')\n        .pipe(inlineCss())\n        .pipe(gulp.dest('build/'));\n});\n```\n\nWith options:\n\n```js\nvar gulp = require('gulp'),\n    inlineCss = require('gulp-inline-css');\n\ngulp.task('default', function() {\n    return gulp.src('./*.html')\n        .pipe(inlineCss({\n\t        \tapplyStyleTags: true,\n\t        \tapplyLinkTags: true,\n\t        \tremoveStyleTags: true,\n\t        \tremoveLinkTags: true\n        }))\n        .pipe(gulp.dest('build/'));\n});\n```\n\nOptions are passed directly to [inline-css](https://github.com/jonkemp/inline-css).\n\n\n## API\n\n### inlineCss(options)\n\n\n#### options.extraCss\n\nType: `String`  \nDefault: `\"\"`\n\nExtra css to apply to the file.\n\n\n#### options.applyStyleTags\n\nType: `Boolean`  \nDefault: `true`\n\nWhether to inline styles in `<style></style>`.\n\n\n#### options.applyLinkTags\n\nType: `Boolean`  \nDefault: `true`\n\nWhether to resolve `<link rel=\"stylesheet\">` tags and inline the resulting styles.\n\n\n#### options.removeStyleTags\n\nType: `Boolean`  \nDefault: `true`\n\nWhether to remove the original `<style></style>` tags after (possibly) inlining the css from them.\n\n\n#### options.removeLinkTags\n\nType: `Boolean`  \nDefault: `true`\n\nWhether to remove the original `<link rel=\"stylesheet\">` tags after (possibly) inlining the css from them.\n\n\n#### options.url\n\nType: `String`  \nDefault: `filePath`\n\nHow to resolve hrefs.\n\n#### options.preserveMediaQueries\n\nType: `Boolean`  \nDefault: `false`\n\nPreserves all media queries (and contained styles) within `<style></style>` tags as a refinement when `removeStyleTags` is `true`. Other styles are removed.\n\n#### options.applyWidthAttributes\n\nType: `Boolean`  \nDefault: `false`\n\nWhether to use any CSS pixel widths to create `width` attributes on elements.\n\n#### options.applyTableAttributes\n\nType: `Boolean`  \nDefault: `false`\n\nWhether to apply the `border`, `cellpadding` and `cellspacing` attributes to `table` elements.\n\n#### options.removeHtmlSelectors\n\nType: `Boolean`  \nDefault: `false`\n\nWhether to remove the `class` and `id` attributes from the markup.\n\n## License\n\nMIT Â© [Jonathan Kemp](http://jonkemp.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jonkemp/gulp-inline-css/issues"
  },
  "_id": "gulp-inline-css@3.0.1",
  "dist": {
    "shasum": "c70641631a3688e88e7a9a86fa1f6aa1b3552ca6"
  },
  "_from": "gulp-inline-css@",
  "_resolved": "https://registry.npmjs.org/gulp-inline-css/-/gulp-inline-css-3.0.1.tgz"
}
